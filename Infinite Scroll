#  Learnt Infinite scroll

import { useEffect, useState } from "react";
import { Container,Row,Col, Pagination, PaginationItem, PaginationLink } from "reactstrap";
import { getAllPosts } from "../services/Post-Service";
import Post from "./Post";
import { toast } from "react-toastify";
import InfiniteScroll from "react-infinite-scroll-component";


function NewsFeed() {

 

    const [postContent, setPostContent] = useState({
        content:[],
        totalPages:'',
        totalElements:'',
        pageSize:'',
        pageNumber:'',
        lastPage:false
    });
  
    useEffect(() => {
   changePage(0);
    }, []);
  
    useEffect(() => {
      // You can perform actions that depend on postContent here
 
    }, [postContent]);

    const [currentPage,setCurrentPage] = useState(0);
    useEffect(()=>{
      changePage(currentPage);
    },[currentPage]);

    const changePage = (pageNumber=0,pageSize=5)=>{
       
        if(pageNumber > postContent.pageNumber && postContent.lastPage){
            return
        }
        if(pageNumber < postContent.pageNumber && postContent.pageNumber == 0){
            return
        }
        
        getAllPosts(pageNumber,pageSize).then(data=>{
           setPostContent({
            content:[...postContent.content,...data.content],
            totalPages:data.totalPages,
            totalElements:data.totalElements,
            pageSize:data.pageSize,
            pageNumber:data.pageNumber,
            }); 
            
        }).catch(error => {
            toast.error("Error in loading posts");
        })
    }



    const changePageInfinite = () =>{
      console.log("Naacho");
    
        setCurrentPage(currentPage+1);
    
    }
  
    return (
      <div className="container-fluid">
        <Row>
          <Col md={{ size: 10, offset: 1 }}>
            <h1>{postContent?.totalElements}</h1>
           
            <InfiniteScroll
            dataLength={postContent.content.length}
            next={changePageInfinite}
            hasMore={!postContent.lastPage}
            
            endMessage = {
              <p style={{textAlign:"center"}}><b>You have seen it all</b></p>
            }

            >
                  {postContent?.content.map((post) => (
          <Post key={post.id} post={post} />  
          ))}

            </InfiniteScroll>
            {/* <Container className="text-center mt-3">
            <Pagination >
        <PaginationItem onClick={()=>changePage(postContent.pageNumber-1)} disabled= {postContent.pageNumber===0}>
          <PaginationLink previous>Previous</PaginationLink>
        </PaginationItem>
    
        {
            [...Array(postContent.totalPages)].map((item,index) =>(
                <PaginationItem onClick={()=>changePage(index)} active = {index==postContent.pageNumber} key = {index} >
                <PaginationLink>
                    {index+1}
                    </PaginationLink> 
                </PaginationItem>
            ))
             

         }
        <PaginationItem onClick={()=>changePage(postContent.pageNumber+1)} disabled={postContent.lastPage}>
        <PaginationLink next>Next</PaginationLink>
        </PaginationItem>
      </Pagination>
            </Container> */}
      
          </Col>
        </Row>
      </div>
    );
  }
  
  export default NewsFeed;
